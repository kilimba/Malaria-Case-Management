/*Kilimba Analytix*/

package com.mcm2.tracking.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.mcm2.tracking.*;

/**
 * Service object for domain model class Ward.
 * @see com.mcm2.tracking.Ward
 */

public interface WardService {
   /**
	 * Creates a new ward.
	 * 
	 * @param created
	 *            The information of the created ward.
	 * @return The created ward.
	 */
	public Ward create(Ward created);

	/**
	 * Deletes a ward.
	 * 
	 * @param wardId
	 *            The id of the deleted ward.
	 * @return The deleted ward.
	 * @throws EntityNotFoundException
	 *             if no ward is found with the given id.
	 */
	public Ward delete(short wardId) throws EntityNotFoundException;

	/**
	 * Finds all wards.
	 * 
	 * @return A list of wards.
	 */
	public Page<Ward> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Ward> findAll(Pageable pageable);
	
	/**
	 * Finds ward by id.
	 * 
	 * @param id
	 *            The id of the wanted ward.
	 * @return The found ward. If no ward is found, this method returns
	 *         null.
	 */
	public Ward findById(short id) throws EntityNotFoundException;
	/**
	 * Updates the information of a ward.
	 * 
	 * @param updated
	 *            The information of the updated ward.
	 * @return The updated ward.
	 * @throws EntityNotFoundException
	 *             if no ward is found with given id.
	 */
	public Ward update(Ward updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the wards in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the ward.
	 */

	public long countAll();


    public Page<Ward> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}


/*Kilimba Analytix*/

package com.mcm2.tracking.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.mcm2.tracking.*;

/**
 * Service object for domain model class Village.
 * @see com.mcm2.tracking.Village
 */

public interface VillageService {
   /**
	 * Creates a new village.
	 * 
	 * @param created
	 *            The information of the created village.
	 * @return The created village.
	 */
	public Village create(Village created);

	/**
	 * Deletes a village.
	 * 
	 * @param villageId
	 *            The id of the deleted village.
	 * @return The deleted village.
	 * @throws EntityNotFoundException
	 *             if no village is found with the given id.
	 */
	public Village delete(Integer villageId) throws EntityNotFoundException;

	/**
	 * Finds all villages.
	 * 
	 * @return A list of villages.
	 */
	public Page<Village> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Village> findAll(Pageable pageable);
	
	/**
	 * Finds village by id.
	 * 
	 * @param id
	 *            The id of the wanted village.
	 * @return The found village. If no village is found, this method returns
	 *         null.
	 */
	public Village findById(Integer id) throws EntityNotFoundException;
	/**
	 * Updates the information of a village.
	 * 
	 * @param updated
	 *            The information of the updated village.
	 * @return The updated village.
	 * @throws EntityNotFoundException
	 *             if no village is found with given id.
	 */
	public Village update(Village updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the villages in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the village.
	 */

	public long countAll();


    public Page<Village> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

